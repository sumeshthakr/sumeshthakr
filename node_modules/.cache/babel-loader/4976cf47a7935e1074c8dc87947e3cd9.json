{"ast":null,"code":"var React = require('react'),\n    assign = require('lodash.assign');\n\nvar pageProtocol = typeof location === 'undefined' ? '' : location.protocol === 'https:' ? 'https:' : 'http:';\nvar emojiStyle = {\n  height: '1em',\n  width: '1em',\n  margin: '0 .05em 0 .1em',\n  verticalAlign: '-0.1em'\n}; // Accept protocol with or without a colon\n\nfunction normalizeProtocol(protocol) {\n  if (protocol && protocol.length > 0 && protocol.charAt(protocol.length - 1) !== ':') {\n    return protocol + ':';\n  }\n\n  return protocol;\n}\n\nmodule.exports = function makeTwemojiRenderer(options) {\n  options = assign({}, {\n    protocol: pageProtocol,\n    baseUrl: '//twemoji.maxcdn.com/2/',\n    size: '72x72',\n    ext: '.png',\n    props: null\n  }, options);\n  return function renderTwemoji(icon, match, offset) {\n    var src = normalizeProtocol(options.protocol) + options.baseUrl + options.size + '/' + icon + options.ext;\n    return React.createElement('img', assign({\n      key: offset,\n      alt: match,\n      draggable: false,\n      src: src,\n      style: emojiStyle\n    }, options.props));\n  };\n};","map":{"version":3,"sources":["/home/sumesh/Downloads/developerFolio/node_modules/react-easy-emoji/lib/makeTwemojiRenderer.js"],"names":["React","require","assign","pageProtocol","location","protocol","emojiStyle","height","width","margin","verticalAlign","normalizeProtocol","length","charAt","module","exports","makeTwemojiRenderer","options","baseUrl","size","ext","props","renderTwemoji","icon","match","offset","src","createElement","key","alt","draggable","style"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;AAAA,IACCC,MAAM,GAAGD,OAAO,CAAC,eAAD,CADjB;;AAGA,IAAIE,YAAY,GAAI,OAAOC,QAAP,KAAoB,WAArB,GAAoC,EAApC,GAA2CA,QAAQ,CAACC,QAAT,KAAsB,QAAvB,GAAmC,QAAnC,GAA8C,OAA3G;AAEA,IAAIC,UAAU,GAAG;AAChBC,EAAAA,MAAM,EAAE,KADQ;AAEhBC,EAAAA,KAAK,EAAE,KAFS;AAGhBC,EAAAA,MAAM,EAAE,gBAHQ;AAIhBC,EAAAA,aAAa,EAAE;AAJC,CAAjB,C,CAOA;;AACA,SAASC,iBAAT,CAA2BN,QAA3B,EAAqC;AACpC,MAAIA,QAAQ,IAAIA,QAAQ,CAACO,MAAT,GAAkB,CAA9B,IAAmCP,QAAQ,CAACQ,MAAT,CAAgBR,QAAQ,CAACO,MAAT,GAAkB,CAAlC,MAAyC,GAAhF,EAAqF;AACpF,WAAOP,QAAQ,GAAG,GAAlB;AACA;;AACD,SAAOA,QAAP;AACA;;AAEDS,MAAM,CAACC,OAAP,GAAiB,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AACtDA,EAAAA,OAAO,GAAGf,MAAM,CAAC,EAAD,EAAK;AACpBG,IAAAA,QAAQ,EAAEF,YADU;AAEpBe,IAAAA,OAAO,EAAE,yBAFW;AAGpBC,IAAAA,IAAI,EAAE,OAHc;AAIpBC,IAAAA,GAAG,EAAE,MAJe;AAKpBC,IAAAA,KAAK,EAAE;AALa,GAAL,EAMbJ,OANa,CAAhB;AAQA,SAAO,SAASK,aAAT,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;AACnD,QAAIC,GAAG,GAAGf,iBAAiB,CAACM,OAAO,CAACZ,QAAT,CAAjB,GAAsCY,OAAO,CAACC,OAA9C,GAAwDD,OAAO,CAACE,IAAhE,GAAuE,GAAvE,GAA6EI,IAA7E,GAAoFN,OAAO,CAACG,GAAtG;AAEA,WAAOpB,KAAK,CAAC2B,aAAN,CACN,KADM,EAENzB,MAAM,CAAC;AACN0B,MAAAA,GAAG,EAAEH,MADC;AAENI,MAAAA,GAAG,EAAEL,KAFC;AAGNM,MAAAA,SAAS,EAAE,KAHL;AAINJ,MAAAA,GAAG,EAAEA,GAJC;AAKNK,MAAAA,KAAK,EAAEzB;AALD,KAAD,EAMHW,OAAO,CAACI,KANL,CAFA,CAAP;AAUA,GAbD;AAcA,CAvBD","sourcesContent":["var React = require('react'),\n\tassign = require('lodash.assign')\n\nvar pageProtocol = (typeof location === 'undefined') ? '' : ((location.protocol === 'https:') ? 'https:' : 'http:')\n\nvar emojiStyle = {\n\theight: '1em',\n\twidth: '1em',\n\tmargin: '0 .05em 0 .1em',\n\tverticalAlign: '-0.1em'\n}\n\n// Accept protocol with or without a colon\nfunction normalizeProtocol(protocol) {\n\tif (protocol && protocol.length > 0 && protocol.charAt(protocol.length - 1) !== ':') {\n\t\treturn protocol + ':'\n\t}\n\treturn protocol\n}\n\nmodule.exports = function makeTwemojiRenderer(options) {\n\toptions = assign({}, {\n\t\tprotocol: pageProtocol,\n\t\tbaseUrl: '//twemoji.maxcdn.com/2/',\n\t\tsize: '72x72',\n\t\text: '.png',\n\t\tprops: null\n\t}, options)\n\n\treturn function renderTwemoji (icon, match, offset) {\n\t\tvar src = normalizeProtocol(options.protocol) + options.baseUrl + options.size + '/' + icon + options.ext\n\n\t\treturn React.createElement(\n\t\t\t'img',\n\t\t\tassign({\n\t\t\t\tkey: offset,\n\t\t\t\talt: match,\n\t\t\t\tdraggable: false,\n\t\t\t\tsrc: src,\n\t\t\t\tstyle: emojiStyle\n\t\t\t}, options.props)\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}